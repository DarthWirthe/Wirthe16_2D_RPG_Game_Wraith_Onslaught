local computer = require("computer")
print("ram: "..tostring(math.floor((computer.totalMemory()-computer.freeMemory())/1024)))
local sound = require("component").sound
local gpu = require("component").gpu
local event = require("event")
 
local tgd = {
[1]={{"G",3,0.5},{"G",3,0.5},{"G",3,0.5},{"D#",3,0.4},{"A#",3,0.2},{"G",3,0.5},{"D#",3,0.4},{"A#",3,0.2},
{"G",3,0.5},{"D",4,0.5},{"D",4,0.5},{"D",4,0.5},{"D#",4,0.4},{"A#",3,0.2},{"F#",3,0.5},{"D#",3,0.4},{"A#",3,0.2},
{"G",3,0.5},{"G",4,0.4},{"G",3,0.4},{"G",4,0.4},{"F#",4,0.4},{"F",4,0.4},{"E",4,0.3},{"D#",4,0.3},{"E",4,0.3},
{"G#",3,0.4},{"C#",4,0.4},{"G#",3,0.4},{"C",4,0.4},{"B",3,0.3},{"A#",3,0.3},{"G",3,0.3},{"A#",3,0.2},{"D#",3,0.3},
{"F#",3,0.3},{"D#",3,0.3},{"A#",3,0.2},{"G",3,0.4},{"D#",3,0.4},{"A#",3,0.2},{"G",3,1}},
[2]={{"D#",4,0.4},{"D#",4,0.5},{"A#",4,0.4},{"A#",4,0.5},{"A",4,1,0.5},{"F#",4,0.4},
{"D#",4,0.4},{"D#",4,0.4},{"A#",4,0.4},{"A#",4,0.4},{"A",4,0.4},{"F#",4,0.8,0.5},
{"D#",4,0.4},{"D#",4,0.4},{"D#",5,0.4},{"D#",5,0.4},{"D",5,0.4},{"D#",5,0.4},{"C",5,0.8},
{"C",5,0.4},{"C#",5,0.4},{"A#",4,0.4},{"F",4,0.4},{"F#",4,0.4},{"D#",4,0.5,1},
{"F#",4,0.2,0.2},{"D#",4,0.2,0.2},{"F#",4,0.2,0.2},{"D#",5,0.2,0.2},{"F#",4,0.2,0.2},
{"D#",4,0.2,0.2},{"F#",4,0.2,0.2},{"D#",4,0.2,0.2},{"D#",4,0.2,0.2},{"D#",4,0.2,0.2},
{"A#",4,0.2,0.3},{"A#",4,0.2,0.3},{"A",4,0.4,1},{"A#",3,0.5,2},

{"D#",4,0.3},{"D#",4,0.4},{"A#",4,0.3},{"A#",4,0.4},{"A",4,0.8,0.4},{"F#",4,0.3},
{"D#",4,0.3},{"D#",4,0.3},{"A#",4,0.3},{"A#",4,0.3},{"A",4,0.3},{"F#",4,0.8,0.4},
{"D#",4,0.3},{"D#",4,0.3},{"D#",5,0.3},{"D#",5,0.3},{"D",5,0.3},{"D#",5,0.3},{"C",5,0.6,0.1},
{"C",5,0.3},{"C#",5,0.3},{"A#",4,0.3},{"F",4,0.3},{"F#",4,0.5},{"D#",4,1},
},
[3]={--{"C",5,0.2,0.3},{"F",4,0.2,0.2},{"E",4,0.2,0.2},{"F",4,0.2,0.2},{"D",4,0.3},{"D",2,0.1,1},
-- {"B",4,0.2},{"G",4,0.2},{"E",4,0.2},{"B",4,0.2},{"G",4,0.2},{"E",4,0.2},{"F",4,0.2},{"A",4,0.2},{"D",4,0.3,1},
-- {"G",4,0.3},{"C",5,0.3},{"G",4,0.3},{"F",4,0.2},{"D",4,0.2},{"C",4,0.3},{"E",4,1},{"0",1},
-- {"D",4,0.5},{"D#",4,0.6},{"E",4,0.5},{"F#",4,0.6},{"A",4,0.5},{"G",4,1},{"0",1},
{"G#",4,1},{"G",4,0.1},{"F",4,0.1},{"E",4,0.1},{"F",4,0.1},{"D",4,0.1},{"C",4,0.1},{"D",4,1},
{"A#",4,1},{"E",4,0.1},{"F",4,0.1},{"G",4,0.2},{"F",4,0.1},{"D",4,0.1},{"C",4,0.1},{"E",4,1},
{"G#",4,1},{"G",4,0.1},{"F",4,0.1},{"E",4,0.1},{"F",4,0.1},{"D",4,0.1},{"C",4,0.1},{"D#",4,1},
{"A#",4,1},{"E",4,0.2},{"F",4,0.2},{"G",4,0.2},{"A",4,0.1},{"G",4,0.1},{"A",4,0.1},{"F",4,1},{"D",4,0.5},{"B",3,1},
},
[4]={
{"D",3,0.3},{"G",2,0.3},{"F",2,0.3},{"G",2,0.3},{"F",2,0.3},{"G",2,0.3},{"C",3,0.3},{"B",2,0.3},{"0",0.5},
{"D",4,0.3},{"G",3,0.3},{"F",3,0.3},{"G",3,0.3},{"F",3,0.3},{"G",3,0.3},{"C",4,0.3},{"B",3,0.3},{"0",0.5},
{"F",2,0.3},{"A",2,0.3},{"G",2,0.4},{"E",2,0.3},{"G",2,0.3},{"F",2,0.3},{"D",2,0.3},{"F",2,0.3},{"E",2,0.3},{"0",0.5},
},
[5]={
{"C",2,0.3},{"D",2,0.3},{"E",2,0.3},{"F",2,0.3},{"G",2,0.3},{"A",2,0.3},{"B",2,0.3},{"C",3,0.3},{"D",3,0.3},{"E",3,0.3},{"F",3,0.3},{"G",3,0.3},
{"G",3,0.3},{"F",3,0.3},{"E",3,0.3},{"D",3,0.3},{"C",3,0.3},{"B",2,0.3},{"A",2,0.3},{"G",2,0.3},{"F",2,0.3},{"E",2,0.3},{"D",2,0.3},{"C",2,0.3},
},
[6]={
{"C",3,0.6},{"D#",3,0.6},{"C",3,0.6},{"F",3,1},{"0",1},{"D",3,0.6},{"F",3,0.6},{"E",3,0.6},{"C",3,0.6},
},
[7]={
{"E",3,0.5},{"F",3,0.5},{"E",3,0.5},{"A",2,0.3},{"0",0.1},{"A",2,0.5},{"B",2,0.5},{"C",3,0.5},{"A",2,0.5},{"E",3,0.5},{"F",3,0.3},{"E",3,0.3},{"0",0.1},{"E",3,0.3},{"B",2,0.5},{"0",0.1},{"B",2,0.3},{"C",3,0.3},
},
[8]={
{"D",4,1},{"E",4,0.3},{"F#",4,0.3},{"D",4,0.3},{"C#",4,1},{"D",4,0.5},{"E",4,0.5},{"F#",4,0.4},{"F#",4,0.6},{"G",4,0.3},{"A",4,0.3},{"B",4,0.3},{"E",4,2},
{"F",4,1},{"F#",4,0.3},{"G",4,0.3},{"A",4,0.3},{"D",5,1},{"D",5,0.3},{"C#",5,0.3},{"B",4,0.3},{"F#",4,0.3},{"A",4,1},{"G#",4,0.3},{"G",4,1},
},
}

local ndata = {
{"C",32.703},
{"C#",34.648},
{"D",36.708},
{"D#",38.708},
{"E",41.203},
{"F",43.654},
{"F#",46.249},
{"G",48.999},
{"G#",51.913},
{"A",55},
{"A#",58.27},
{"B",61.735}
}

local j = {
[1]={sound.modes.sawtooth,100,100,0.1,300,sound.modes.sine,5,195,1,250},
[2]={sound.modes.triangle,50,200,0.5,50,sound.modes.sine,50,200,1,100},
[3]={sound.modes.sawtooth,10,300,0.2,1,sound.modes.triangle,1,100,1,300},
[4]={sound.modes.sine,10,100,1,300,sound.modes.sine,50,200,0.5,250},
[5]={sound.modes.triangle,1,150,1,50,sound.modes.triangle,1,100,0.7,100},
[6]={sound.modes.square,1,30,0.3,20,sound.modes.triangle,1,50,1,50}, --
}

local i = 6
local cur = 8
local st, nt

for m = 1, 8 do
sound.close(m)
end
local freq

for f = 1, #tgd[cur] do
for m = 1, 8 do
sound.open(m)
sound.setVolume(m, 1)
end
 for t = 1, #ndata do 
  if type(tgd[cur][f][1]) == "table" or tgd[cur][f][1] == ndata[t][1] then  
  freq = ndata[t][2]*2^(tgd[cur][f][2]-1)
  for m = 1, 8 do
  sound.setVolume(m, 1)
  end
  sound.setWave(2, j[i][1])
  sound.setFrequency(2, freq)
  print(f.." "..ndata[t][1]..tgd[cur][f][2].."  ram: "..tostring(math.floor((computer.totalMemory()-computer.freeMemory())/1024)))
  sound.setADSR(2, j[i][2], j[i][3], j[i][4], j[i][5])
  sound.setWave(1, j[i][6])
  sound.setFrequency(1, freq)
  sound.setADSR(1, j[i][7], j[i][8], j[i][9], j[i][10])
  
  sound.setWave(4, j[i][1])
  sound.setFrequency(4, freq/2)
  sound.setADSR(4, j[i][2], j[i][3], j[i][4], j[i][5])
  sound.setWave(3, j[i][6])
  sound.setFrequency(3, freq/2)
  sound.setADSR(3, j[i][7], j[i][8], j[i][9], j[i][10])
  
  sound.setWave(6, j[i][1])
  sound.setFrequency(6, freq*2)
  sound.setADSR(6, j[i][2], j[i][3], j[i][4], j[i][5])
  sound.setWave(5, j[i][6])
  sound.setFrequency(5, freq*2)
  sound.setADSR(5, j[i][7], j[i][8], j[i][9], j[i][10])
  
  sound.delay(math.min((tgd[cur][f][3]+(tgd[cur][f][4] or 0))*1000,5000))
  sound.process()
  os.sleep(tgd[cur][f][3]+(tgd[cur][f][4] or 0))
  elseif tgd[cur][f][1] == "0" then
  sound.delay(math.min((tgd[cur][f][2])*1000,5000))
  -- sound.process()
  os.sleep(tgd[cur][f][2])
  break
  end
 end
end
sound.delay(1)
sound.process()

-- sound.open(1)
-- sound.open(2)
-- sound.setVolume(1, 1)
-- sound.setVolume(2, 1)
-- sound.setFrequency(1, 440)
-- sound.setFrequency(2, 440)
-- sound.setWave(2, sound.modes.triangle)
-- sound.setWave(1, sound.modes.sawtooth)
-- local j = 1
-- for f = 1, #base do
-- gpu.setBackground(j*1000000)
-- gpu.fill(f,1,f,50," ")
-- if j == 1 then j = 0 else j = 1 end
-- end
-- while true do
 -- e = {event.pull()}
 -- if e[1] == "touch" then
  -- for f = 1, #base do
   -- if e[3] == f then
    -- sound.setFrequency(1, base[f][2])
    -- sound.setFrequency(2, base[f][2])
    -- sound.setADSR(2, 100, 300, 0.5, 100)
    -- sound.setADSR(1, 100, 250, 1, 100)
	-- sound.delay(500)
    -- sound.process()
   -- end
  -- end
 -- elseif e[1] == "key_down"  then
 -- break
 -- end
-- end
sound.close(1)
sound.close(2)





